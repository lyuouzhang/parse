panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_23 = rownames(mu_select)[order(mu_select[91:120,2]-mu_select[91:120,3])+90]
order(mu_select[31:60,1]-mu_select[31:60,3])+30
rownames(mu_select)
df_heatmap
seq_14 = rownames(mu_select)[order(mu_select[61:90,1]-mu_select[61:90,4])+60]
df_heatmap[c(61:90,601:630),]
ggplot(df_heatmap[c(61:90,601:630),], aes(cluster, factor(gene,levels = seq_14), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[61:90,1]-mu_select[61:90,4])+60]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_14
seq_23 = rownames(mu_select)[order(mu_select[91:120,2]-mu_select[91:120,3])+90]
ggplot(df_heatmap[c(271:300,451:480),], aes(cluster, factor(gene,levels = seq_23), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[91:120,2]-mu_select[91:120,3])+90]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_24 = rownames(mu_select)[order(mu_select[121:150,2]-mu_select[121:150,4])+120]
ggplot(df_heatmap[c(301:330,661:690),], aes(cluster, factor(gene,levels = seq_24), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[121:150,2]-mu_select[121:150,4])+120]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_34 = rownames(mu_select)[order(mu_select[151:180,3]-mu_select[151:180,4])+150]
ggplot(df_heatmap[c(511:540,691:720),], aes(cluster, factor(gene,levels = seq_34), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[151:180,3]-mu_select[151:180,4])+150]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
df_heatmap[c(511:540,691:720),]
parse.fit$mu.hat.best[4,info_gene[1:20]]
parse.fit0$mu.hat.best[4,]
parse.fit0$mu.hat.best[4,1:20]
save(parse.fit0, file = "parse_result_all6.Rdata")
parse.fit=parse.fit0
zhat.parse = parse.fit$s.hat.best
mis.parse = miss.clus(zhat.parse,true.label)
zhat.perm = miss.clus.a(zhat.parse,true.label)$clus_new
permu = miss.clus.a(zhat.parse,true.label)$perm
A = diag(1,4)[,permu]
mu.fit = A%*%parse.fit$mu.hat.best
### difference between means
mu.diff.create = function(K){
A = c()
for(k in 1:K){
A = rbind(A, cbind(matrix(0,K-k,k-1),rep(1,K-k),-diag(K-k)))
}
return(A)
}
mu_diff = mu.diff.create(4)
parse.diff = mu_diff%*%mu.fit
xtable::xtable(t(table(apply(abs(parse.diff)>1e-3,2,sum))))
mu.true = matrix(0,length(info_gene),4)
for(i in 1:4){
mu.true[,i] = apply(y1[which(zhat.perm==i),],2,mean)
}
true.diff = mu_diff%*%t(mu.true)
info = info_gene[which(apply(parse.diff>1e-3,2,sum)>0)]
parse.diff.pos = abs(parse.diff)>1e-3
nonz = which(apply(parse.diff.pos,2,sum)>0)
apply(parse.diff.pos,1,sum)
xtable::xtable(t(apply(parse.diff.pos,1,sum)))
one_two = order(abs(parse.diff[1,]),decreasing = TRUE)[1:30]
one_three = order(abs(parse.diff[2,]),decreasing = TRUE)[1:30]
one_four = order(abs(parse.diff[3,]),decreasing = TRUE)[1:30]
two_three = order(abs(parse.diff[4,]),decreasing = TRUE)[1:30]
two_four = order(abs(parse.diff[5,]),decreasing = TRUE)[1:30]
three_four = order(abs(parse.diff[6,]),decreasing = TRUE)[1:30]
length(unique(c(one_two,one_three,one_four,two_three,two_four,three_four)))
one_common = intersect(intersect(one_two,one_three),one_four)
two_common = intersect(intersect(one_two,two_three),two_four)
three_common = intersect(intersect(one_three,two_three),three_four)
four_common = intersect(intersect(one_four,two_four),three_four)
length(c(one_common,two_common,three_common,four_common))
length(unique(c(one_common,two_common,three_common,four_common)))
c(one_two,one_three,one_four,two_three,two_four,three_four)
seq_gene = info_gene(c(one_two,one_three,one_four,two_three,two_four,three_four))
col_gene = rep("black",180)
col_gene[which((seq_gene%in%one_common)==TRUE)] = "red"
col_gene[which((seq_gene%in%two_common)==TRUE)] = "blue"
col_gene[which((seq_gene%in%three_common)==TRUE)] = "magenta"
col_gene[which((seq_gene%in%four_common)==TRUE)] = "brown"
mu_select = t(mu.fit)[c(one_two,one_three,one_four,two_three,two_four,three_four),]
mu_name = c(one_two,one_three,one_four,two_three,two_four,three_four)
gene_info = read.csv("homologene.data",sep='',header = FALSE)
gene_select = as.numeric(mu_name)
gene_pos = rep(NA,length(gene_select))
gene_no = as.numeric(gene_info[,3])
for(i in 1:length(gene_select)){
gene_pos[i] = which.min(abs(gene_no-gene_select[i]))
}
rownames(mu_select) = gene_info[gene_pos,4]
rownames(mu_select)[which((seq_gene%in%one_common)==TRUE)] =
paste0("x ",rownames(mu_select)[which((seq_gene%in%one_common)==TRUE)])
rownames(mu_select)[which((seq_gene%in%two_common)==TRUE)] =
paste0("o ",rownames(mu_select)[which((seq_gene%in%two_common)==TRUE)])
rownames(mu_select)[which((seq_gene%in%three_common)==TRUE)] =
paste0("* ",rownames(mu_select)[which((seq_gene%in%three_common)==TRUE)])
rownames(mu_select)[which((seq_gene%in%four_common)==TRUE)] =
paste0("+ ",rownames(mu_select)[which((seq_gene%in%four_common)==TRUE)])
colnames(mu_select) = c("alpha","beta","delta","PP")
df_heatmap = data.frame(
gene = rep(rownames(mu_select),4),
cluster = rep(colnames(mu_select),each=180),
level = as.vector(mu_select)
)
black.white <-  c(rep("#FFFFFF",10),colorRampPalette(c("white", "#5F90BB"))(n=20))
seq_12 = rownames(mu_select)[order(mu_select[1:30,1]-mu_select[1:30,2])]
ggplot(df_heatmap[c(1:30,181:210),], aes(cluster, factor(gene,levels = seq_12), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[1:30,1]-mu_select[1:30,2])]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_13 = rownames(mu_select)[order(mu_select[31:60,1]-mu_select[31:60,3])+30]
ggplot(df_heatmap[c(31:60,391:420),], aes(cluster, factor(gene,levels = seq_13), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[31:60,1]-mu_select[31:60,3])+30]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_14 = rownames(mu_select)[order(mu_select[61:90,1]-mu_select[61:90,4])+60]
ggplot(df_heatmap[c(61:90,601:630),], aes(cluster, factor(gene,levels = seq_14), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[61:90,1]-mu_select[61:90,4])+60]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
mu.hat = matrix(0,K,d)
sigma.hat = rep(0,d)
mu.hat[,info_gene] = parse.fit$mu.hat.best
dim(mu.hat[,-info_gene])
dim(parse.fit$mu.hat.best[,noninfo])
mu.hat[,-info_gene] = parse.fit$mu.hat.best[,noninfo]
sigma.hat[info_gene] = parse.fit$sigma.hat.best
sigma.hat[-info_gene] = parse.fit$sigma.hat.best[,noninfo]
sigma.hat[-info_gene] = parse.fit$sigma.hat.best[noninfo]
sigma.hat[-info_gene]
parse.fit$mu.hat.best = mu.hat
parse.fit$sigma.hat.best = sigma.hat
zhat.parse = parse.fit$s.hat.best
mis.parse = miss.clus(zhat.parse,true.label)
zhat.perm = miss.clus.a(zhat.parse,true.label)$clus_new
permu = miss.clus.a(zhat.parse,true.label)$perm
A = diag(1,4)[,permu]
mu.fit = A%*%parse.fit$mu.hat.best
### difference between means
mu.diff.create = function(K){
A = c()
for(k in 1:K){
A = rbind(A, cbind(matrix(0,K-k,k-1),rep(1,K-k),-diag(K-k)))
}
return(A)
}
mu_diff = mu.diff.create(4)
parse.diff = mu_diff%*%mu.fit
xtable::xtable(t(table(apply(abs(parse.diff)>1e-3,2,sum))))
mu.true = matrix(0,length(info_gene),4)
for(i in 1:4){
mu.true[,i] = apply(y1[which(zhat.perm==i),],2,mean)
}
true.diff = mu_diff%*%t(mu.true)
info = info_gene[which(apply(parse.diff>1e-3,2,sum)>0)]
info = which(apply(parse.diff>1e-3,2,sum)>0)
info
parse.diff.pos = abs(parse.diff)>1e-3
which(apply(parse.diff.pos,2,sum)>0)
nonz
info_gene[nonz]
parse.diff.pos
dim(parse.diff)
parse.diff[,info_gene][1:10]
parse.diff[,info_gene][,1:10]
parse.diff[,-info_gene][,1:10]
apply(parse.diff[,-info_gene],2,sum)
apply(parse.diff[,-info_gene],1,sum)
parse.fit=parse.fit0
zhat.parse = parse.fit$s.hat.best
mis.parse = miss.clus(zhat.parse,true.label)
zhat.perm = miss.clus.a(zhat.parse,true.label)$clus_new
permu = miss.clus.a(zhat.parse,true.label)$perm
A = diag(1,4)[,permu]
mu.fit = A%*%parse.fit$mu.hat.best
### difference between means
mu.diff.create = function(K){
A = c()
for(k in 1:K){
A = rbind(A, cbind(matrix(0,K-k,k-1),rep(1,K-k),-diag(K-k)))
}
return(A)
}
mu_diff = mu.diff.create(4)
parse.diff = mu_diff%*%mu.fit
xtable::xtable(t(table(apply(abs(parse.diff)>1e-3,2,sum))))
mu.fit=mu.hat
parse.diff = mu_diff%*%mu.fit
xtable::xtable(t(table(apply(abs(parse.diff)>1e-3,2,sum))))
mu.fit=mu.hat[,info_gene]
parse.diff = mu_diff%*%mu.fit
xtable::xtable(t(table(apply(abs(parse.diff)>1e-3,2,sum))))
mu.fit=mu.hat[,-info_gene]
parse.diff = mu_diff%*%mu.fit
xtable::xtable(t(table(apply(abs(parse.diff)>1e-3,2,sum))))
noninfo
mu.fit = A%*%parse.fit$mu.hat.best
### difference between means
mu.diff.create = function(K){
A = c()
for(k in 1:K){
A = rbind(A, cbind(matrix(0,K-k,k-1),rep(1,K-k),-diag(K-k)))
}
return(A)
}
mu_diff = mu.diff.create(4)
parse.diff = mu_diff%*%mu.fit
table(apply(abs(parse.diff)>1e-3,2,sum)
)
noninfo = which(apply(abs(parse.diff)>1e-3,2,sum)==0)
which(apply(abs(parse.diff)>1e-3,2,sum)==0)
noninfo = sample(which(apply(abs(parse.diff)>1e-3,2,sum)==0),d-length(info_gene),replace = TRUE)
mu.hat = matrix(0,K,d)
sigma.hat = rep(0,d)
noninfo = sample(which(apply(abs(parse.diff)>1e-3,2,sum)==0),d-length(info_gene),replace = TRUE)
mu.hat[,info_gene] = parse.fit$mu.hat.best
mu.hat[,-info_gene] = parse.fit$mu.hat.best[,noninfo]
sigma.hat[info_gene] = parse.fit$sigma.hat.best
sigma.hat[-info_gene] = parse.fit$sigma.hat.best[noninfo]
parse.fit$mu.hat.best = mu.hat
parse.fit$sigma.hat.best = sigma.hat
zhat.parse = parse.fit$s.hat.best
mis.parse = miss.clus(zhat.parse,true.label)
zhat.perm = miss.clus.a(zhat.parse,true.label)$clus_new
permu = miss.clus.a(zhat.parse,true.label)$perm
A = diag(1,4)[,permu]
mu.fit = A%*%parse.fit$mu.hat.best
### difference between means
mu.diff.create = function(K){
A = c()
for(k in 1:K){
A = rbind(A, cbind(matrix(0,K-k,k-1),rep(1,K-k),-diag(K-k)))
}
return(A)
}
mu_diff = mu.diff.create(4)
parse.diff = mu_diff%*%mu.fit
xtable::xtable(t(table(apply(abs(parse.diff)>1e-3,2,sum))))
mu.true = matrix(0,length(info_gene),4)
for(i in 1:4){
mu.true[,i] = apply(y1[which(zhat.perm==i),],2,mean)
}
true.diff = mu_diff%*%t(mu.true)
info = which(apply(parse.diff>1e-3,2,sum)>0)
parse.diff.pos = abs(parse.diff)>1e-3
nonz = which(apply(parse.diff.pos,2,sum)>0)
apply(parse.diff.pos,1,sum)
xtable::xtable(t(apply(parse.diff.pos,1,sum)))
one_two = order(abs(parse.diff[1,]),decreasing = TRUE)[1:30]
one_three = order(abs(parse.diff[2,]),decreasing = TRUE)[1:30]
one_four = order(abs(parse.diff[3,]),decreasing = TRUE)[1:30]
two_three = order(abs(parse.diff[4,]),decreasing = TRUE)[1:30]
two_four = order(abs(parse.diff[5,]),decreasing = TRUE)[1:30]
three_four = order(abs(parse.diff[6,]),decreasing = TRUE)[1:30]
length(unique(c(one_two,one_three,one_four,two_three,two_four,three_four)))
one_common = intersect(intersect(one_two,one_three),one_four)
two_common = intersect(intersect(one_two,two_three),two_four)
three_common = intersect(intersect(one_three,two_three),three_four)
four_common = intersect(intersect(one_four,two_four),three_four)
length(c(one_common,two_common,three_common,four_common))
length(unique(c(one_common,two_common,three_common,four_common)))
seq_gene = c(one_two,one_three,one_four,two_three,two_four,three_four)
col_gene = rep("black",180)
col_gene[which((seq_gene%in%one_common)==TRUE)] = "red"
col_gene[which((seq_gene%in%two_common)==TRUE)] = "blue"
col_gene[which((seq_gene%in%three_common)==TRUE)] = "magenta"
col_gene[which((seq_gene%in%four_common)==TRUE)] = "brown"
mu_select = t(mu.fit)[c(one_two,one_three,one_four,two_three,two_four,three_four),]
mu_name = c(one_two,one_three,one_four,two_three,two_four,three_four)
gene_info = read.csv("homologene.data",sep='',header = FALSE)
gene_select = as.numeric(mu_name)
gene_pos = rep(NA,length(gene_select))
gene_no = as.numeric(gene_info[,3])
for(i in 1:length(gene_select)){
gene_pos[i] = which.min(abs(gene_no-gene_select[i]))
}
rownames(mu_select) = gene_info[gene_pos,4]
rownames(mu_select)[which((seq_gene%in%one_common)==TRUE)] =
paste0("x ",rownames(mu_select)[which((seq_gene%in%one_common)==TRUE)])
rownames(mu_select)[which((seq_gene%in%two_common)==TRUE)] =
paste0("o ",rownames(mu_select)[which((seq_gene%in%two_common)==TRUE)])
rownames(mu_select)[which((seq_gene%in%three_common)==TRUE)] =
paste0("* ",rownames(mu_select)[which((seq_gene%in%three_common)==TRUE)])
rownames(mu_select)[which((seq_gene%in%four_common)==TRUE)] =
paste0("+ ",rownames(mu_select)[which((seq_gene%in%four_common)==TRUE)])
colnames(mu_select) = c("alpha","beta","delta","PP")
df_heatmap = data.frame(
gene = rep(rownames(mu_select),4),
cluster = rep(colnames(mu_select),each=180),
level = as.vector(mu_select)
)
black.white <-  c(rep("#FFFFFF",10),colorRampPalette(c("white", "#5F90BB"))(n=20))
seq_12 = rownames(mu_select)[order(mu_select[1:30,1]-mu_select[1:30,2])]
ggplot(df_heatmap[c(1:30,181:210),], aes(cluster, factor(gene,levels = seq_12), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[1:30,1]-mu_select[1:30,2])]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_13 = rownames(mu_select)[order(mu_select[31:60,1]-mu_select[31:60,3])+30]
ggplot(df_heatmap[c(31:60,391:420),], aes(cluster, factor(gene,levels = seq_13), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[31:60,1]-mu_select[31:60,3])+30]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_14 = rownames(mu_select)[order(mu_select[61:90,1]-mu_select[61:90,4])+60]
ggplot(df_heatmap[c(61:90,601:630),], aes(cluster, factor(gene,levels = seq_14), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[61:90,1]-mu_select[61:90,4])+60]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_23 = rownames(mu_select)[order(mu_select[91:120,2]-mu_select[91:120,3])+90]
ggplot(df_heatmap[c(271:300,451:480),], aes(cluster, factor(gene,levels = seq_23), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[91:120,2]-mu_select[91:120,3])+90]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_24 = rownames(mu_select)[order(mu_select[121:150,2]-mu_select[121:150,4])+120]
ggplot(df_heatmap[c(301:330,661:690),], aes(cluster, factor(gene,levels = seq_24), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[121:150,2]-mu_select[121:150,4])+120]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
seq_34 = rownames(mu_select)[order(mu_select[151:180,3]-mu_select[151:180,4])+150]
ggplot(df_heatmap[c(511:540,691:720),], aes(cluster, factor(gene,levels = seq_34), fill = level)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "#5F90BB")+
labs(
x = "",
y = ""
)+
NoLegend() +
theme(
plot.margin = unit(c(1,-1,1,-1),"cm"),
axis.title = element_text(size = 10),
axis.text.y = element_text(size = 10,colour = col_gene[order(mu_select[151:180,3]-mu_select[151:180,4])+150]),
axis.text.x = element_text(size = 10,angle = 30),
panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = "transparent",color = "black"),
panel.grid.major= element_blank(),
panel.grid.minor = element_blank()
)
save(parse.fit, file = "parse_result_all4.Rdata")
rm(list=ls())
setwd("C:/Dropbox/PARSE/paper files/simulation/parse-R-version0.1.1/PARSE")
library(devtools)
document()
build()
